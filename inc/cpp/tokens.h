/* SPDX-License-Identifier: GPL-3.0-or-later */
/* Copyright (c) 2023 Amol Surati */

DEF(TOKEN_INVALID)	/* Must be first */

DEF(TOKEN_INTEGER_CHAR_CONST)	/* Keep these 5 together, in same order */
DEF(TOKEN_UTF_8_CHAR_CONST)
DEF(TOKEN_UTF_16_CHAR_CONST)
DEF(TOKEN_UTF_32_CHAR_CONST)
DEF(TOKEN_WCHAR_T_CHAR_CONST)

DEF(TOKEN_CHAR_STRING_LITERAL)	/* Keep these 5 together, in same order */
DEF(TOKEN_UTF_8_STRING_LITERAL)
DEF(TOKEN_UTF_16_STRING_LITERAL)
DEF(TOKEN_UTF_32_STRING_LITERAL)
DEF(TOKEN_WCHAR_T_STRING_LITERAL)

DEF(TOKEN_NUMBER)	/* Uses within cpp. cc uses these 3 below */
DEF(TOKEN_INTEGER_CONST)
DEF(TOKEN_FLOAT_CONST)
DEF(TOKEN_ENUM_CONST)

/* Maintain order with g_punctuators */
/* Single-char tokens */
DEF(TOKEN_LEFT_BRACE)
DEF(TOKEN_LEFT_BRACKET)
DEF(TOKEN_LEFT_PAREN)
DEF(TOKEN_RIGHT_BRACE)
DEF(TOKEN_RIGHT_BRACKET)
DEF(TOKEN_RIGHT_PAREN)
DEF(TOKEN_BACK_SLASH)
DEF(TOKEN_AT)
DEF(TOKEN_TILDE)
DEF(TOKEN_HASH)
DEF(TOKEN_DOT)
DEF(TOKEN_COLON)
DEF(TOKEN_SEMI_COLON)
DEF(TOKEN_COMMA)
DEF(TOKEN_ASSIGN)
DEF(TOKEN_DIV)
DEF(TOKEN_MOD)
DEF(TOKEN_MUL)
DEF(TOKEN_PLUS)
DEF(TOKEN_MINUS)
DEF(TOKEN_QUESTION_MARK)
DEF(TOKEN_EXCLAMATION_MARK)
DEF(TOKEN_BITWISE_OR)
DEF(TOKEN_BITWISE_XOR)
DEF(TOKEN_BITWISE_AND)
DEF(TOKEN_LESS_THAN)
DEF(TOKEN_GREATER_THAN)
DEF(TOKEN_QUOTE)
DEF(TOKEN_DOUBLE_QUOTE)
DEF(TOKEN_BACK_QUOTE)

/* Double-char tokens */
DEF(TOKEN_DOUBLE_HASH)
DEF(TOKEN_DOUBLE_COLON)
DEF(TOKEN_INCR)
DEF(TOKEN_DECR)
DEF(TOKEN_SHIFT_LEFT)
DEF(TOKEN_SHIFT_RIGHT)
DEF(TOKEN_LOGICAL_OR)
DEF(TOKEN_LOGICAL_AND)
DEF(TOKEN_LESS_THAN_EQUALS)
DEF(TOKEN_GREATER_THAN_EQUALS)
DEF(TOKEN_EQUALS)
DEF(TOKEN_NOT_EQUALS)
DEF(TOKEN_MUL_ASSIGN)
DEF(TOKEN_DIV_ASSIGN)
DEF(TOKEN_MOD_ASSIGN)
DEF(TOKEN_PLUS_ASSIGN)
DEF(TOKEN_MINUS_ASSIGN)
DEF(TOKEN_BITWISE_AND_ASSIGN)
DEF(TOKEN_BITWISE_OR_ASSIGN)
DEF(TOKEN_BITWISE_XOR_ASSIGN)

/* Triple-char tokens */
DEF(TOKEN_SHIFT_LEFT_ASSIGN)
DEF(TOKEN_SHIFT_RIGHT_ASSIGN)
DEF(TOKEN_ELLIPSIS)

/* Identifier and Keywords. Same order as g_key_words */
DEF(TOKEN_IDENTIFIER)
DEF(TOKEN_ATOMIC)
DEF(TOKEN_BIT_INT)
DEF(TOKEN_COMPLEX)
DEF(TOKEN_DECIMAL_128)
DEF(TOKEN_DECIMAL_32)
DEF(TOKEN_DECIMAL_64)
DEF(TOKEN_GENERIC)
DEF(TOKEN_IMAGINARY)
DEF(TOKEN_NO_RETURN)
DEF(TOKEN_ALIGNAS)
DEF(TOKEN_ALIGNOF)
DEF(TOKEN_AUTO)
DEF(TOKEN_BOOL)
DEF(TOKEN_BREAK)
DEF(TOKEN_CASE)
DEF(TOKEN_CHAR)
DEF(TOKEN_CONST)
DEF(TOKEN_CONST_EXPR)
DEF(TOKEN_CONTINUE)
DEF(TOKEN_DEFAULT)
DEF(TOKEN_DO)
DEF(TOKEN_DOUBLE)
DEF(TOKEN_ELSE)
DEF(TOKEN_ENUM)
DEF(TOKEN_EXTERN)
DEF(TOKEN_FALSE)
DEF(TOKEN_FLOAT)
DEF(TOKEN_FOR)
DEF(TOKEN_GO_TO)
DEF(TOKEN_IF)
DEF(TOKEN_INLINE)
DEF(TOKEN_INT)
DEF(TOKEN_LONG)
DEF(TOKEN_NULL_PTR)
DEF(TOKEN_REGISTER)
DEF(TOKEN_RESTRICT)
DEF(TOKEN_RETURN)
DEF(TOKEN_SHORT)
DEF(TOKEN_SIGNED)
DEF(TOKEN_SIZEOF)
DEF(TOKEN_STATIC)
DEF(TOKEN_STATIC_ASSERT)
DEF(TOKEN_STRUCT)
DEF(TOKEN_SWITCH)
DEF(TOKEN_THREAD_LOCAL)
DEF(TOKEN_TRUE)
DEF(TOKEN_TYPE_DEF)
DEF(TOKEN_TYPE_OF)
DEF(TOKEN_TYPE_OF_UNQUAL)
DEF(TOKEN_UNION)
DEF(TOKEN_UNSIGNED)
DEF(TOKEN_VOID)
DEF(TOKEN_VOLATILE)
DEF(TOKEN_WHILE)

/* CPP Directive keywords. if/else from above */
DEF(TOKEN_DATE)
DEF(TOKEN_FILE)
DEF(TOKEN_LINE)
DEF(TOKEN_STDC)
DEF(TOKEN_STDC_EMBED_NOT_FOUND)
DEF(TOKEN_STDC_EMBED_FOUND)
DEF(TOKEN_STDC_EMBED_EMPTY)
DEF(TOKEN_STDC_HOSTED)
DEF(TOKEN_STDC_NO_ATOMICS)
DEF(TOKEN_STDC_NO_COMPLEX)
DEF(TOKEN_STDC_NO_THREADS)
DEF(TOKEN_STDC_NO_VLA)
DEF(TOKEN_STDC_UTF_16)
DEF(TOKEN_STDC_UTF_32)
DEF(TOKEN_STDC_VERSION)
DEF(TOKEN_TIME)
DEF(TOKEN_VA_ARGS)
DEF(TOKEN_VA_OPT)
DEF(TOKEN_C_PLUS_PLUS)
DEF(TOKEN_HAS_C_ATTRIBUTE)
DEF(TOKEN_HAS_EMBED)
DEF(TOKEN_HAS_INCLUDE)
DEF(TOKEN_DIRECTIVE_DEFINE)
DEF(TOKEN_DEFINED)
DEF(TOKEN_DIRECTIVE_ELSE_IF)
DEF(TOKEN_DIRECTIVE_ELSE_IF_DEFINED)
DEF(TOKEN_DIRECTIVE_ELSE_IF_NOT_DEFINED)
DEF(TOKEN_DIRECTIVE_EMBED)
DEF(TOKEN_DIRECTIVE_END_IF)
DEF(TOKEN_DIRECTIVE_ERROR)
DEF(TOKEN_DIRECTIVE_IF_DEFINED)
DEF(TOKEN_DIRECTIVE_IF_NOT_DEFINED)
DEF(TOKEN_DIRECTIVE_INCLUDE)
DEF(TOKEN_DIRECTIVE_LINE)
DEF(TOKEN_DIRECTIVE_PRAGMA)
DEF(TOKEN_DIRECTIVE_UNDEF)
DEF(TOKEN_DIRECTIVE_WARNING)

/* Used only by CPP */
DEF(TOKEN_DIRECTIVE_IF)
DEF(TOKEN_DIRECTIVE_ELSE)
DEF(TOKEN_Q_HEADER_NAME)
DEF(TOKEN_H_HEADER_NAME)
DEF(TOKEN_PLACE_MARKER)
DEF(TOKEN_REPL_LIST_END)
DEF(TOKEN_NON_STRINGIZING_DOUBLE_HASH)
DEF(TOKEN_UNARY_MINUS)
